#!/usr/bin/env bash
: <<'COPYRIGHT'
 Copyright (c) Vaimo Group. All rights reserved.
 See LICENSE_VAIMO.txt for license details.
COPYRIGHT

script_path=${BASH_SOURCE[0]}
script_root=$(dirname $(test -L ${script_path} && readlink -f ${script_path} || echo ${script_path}))

source ${script_root}/lib/output.sh

rm phpcs.xml 2>/dev/null
ln -s $(pwd)/.config/phpcs/vendor.xml $(pwd)/phpcs.xml

main()
{
    local root_package="vaimo/composer-changelogs"

    local has_errors=
    
    for dependency in $(find vendor -mindepth 2 -maxdepth 2 -type d|sed 's|[^/]*\/||') ; do
        if ! is_production_dependency "${root_package}" "${dependency}" ; then
            continue
        fi

        _info "${dependency}" 
    
        if validate_dependency ${dependency} ; then
            continue
        fi
        
        has_errors=1
    done
    
    if [ "${has_errors}" == "1" ] ; then
        exit 1
    fi
}

validate_dependency()
{
    dependency=${1}
    
    local src_paths=$(get_autoload_paths "${dependency}")

    local code=$(echo ${dependency}|sed 's/\//-/g')

    local report_file=report-${code}.csv
    
    if vendor/bin/phpcs --report=full --report-csv=report-${code}.csv -p ${src_paths} ; then
        return 0
    fi
    
    original_ifs=${IFS}
    IFS=$'\n'
    
    local full_path=$(cd vendor/${dependency} &>/dev/null && pwd)
    
    local whitelist_path=".config/phpcs/whitelist/${code}"
    
    if [ -f ${whitelist_path} ] ; then
        local whitelist=$(cat ${whitelist_path})
        
        for line in $(cat ${report_file}|grep '^"'|cut -d':' -f2-) ; do
            local file=$(echo ${line}|cut -d',' -f1|tr -d '"'|sed 's|'${full_path}'||g'|sed 's/^\/*//g')
            local row=$(echo ${line}|cut -d',' -f2)
            local col=$(echo ${line}|cut -d',' -f3)
            local issue=$(echo ${line}|cut -d',' -f6)
        
        
            local match=$(echo "${whitelist}"|grep "${file},${row},${col},${issue}")
            
            if [ "${match}" == "" ] ; then
                return 1
            fi
        done
        
        _warning "All encountered issues have been explicitly whitelisted"
        
        return 0
    fi

    IFS=${original_ifs}
    
    return 1
}

get_autoload_paths() 
{
    package_path=${1}
    
    local package_root=$(cd "vendor/${dependency}" &>/dev/null && pwd)

    local autoload_config_extractor=$(cat <<SCRIPT
        \$config = json_decode(
            file_get_contents('${package_root}/composer.json'), 
            true
        ); 
                
        echo implode(
            \PHP_EOL, 
            array_merge(
                \$config['autoload']['psr-4'] ?? [], 
                \$config['autoload']['psr-0'] ?? []
            )
        );
SCRIPT
)
    local src_paths=
        
    for src_path in $(php -r "${autoload_config_extractor}") ; do
        src_paths=",${package_root}/${src_path}"
    done
    
    echo ${src_paths}|sed 's/^,*//g'
}

is_production_dependency()
{
    root_name=${1}
    dependency=${2}
    
    items="${dependency}"

    original_ifs=${IFS}
    IFS=$'\n'

    for item in ${items} ; do
        if [ "${item}" == "" ] ; then
            continue
        fi
        
        results=$(composer why ${item}|grep -v 'for development'|cut -d' ' -f1)
        
        if [ "${results}" == "" ] ; then
            continue
        fi
        
        for result in ${results} ; do
            if [ "${result}" != "${root_name}" ] ; then
                items="\n${results}"
                
                continue
            fi

             return 0
        done       
    done
    
    IFS=${original_ifs}

    return 1
}

main
